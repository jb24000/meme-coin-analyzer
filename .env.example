# Meme Coin Analyzer - Environment Variables Example
# Copy this file to .env and fill in your API keys

# ===========================================
# BLOCKCHAIN DATA PROVIDERS
# ===========================================

# DexScreener - DEX trading data and liquidity metrics
# Get your API key from: https://dexscreener.com/api
# Free tier: 300 requests/minute
DEXSCREENER_API_KEY=your_dexscreener_api_key_here

# Etherscan - Ethereum blockchain explorer
# Get your API key from: https://etherscan.io/apis
# Free tier: 5 requests/second
ETHERSCAN_API_KEY=your_etherscan_api_key_here

# BSCScan - Binance Smart Chain explorer
# Get your API key from: https://bscscan.com/apis
# Free tier: 5 requests/second
BSCSCAN_API_KEY=your_bscscan_api_key_here

# Polygonscan - Polygon blockchain explorer
# Get your API key from: https://polygonscan.com/apis
# Free tier: 5 requests/second
POLYGONSCAN_API_KEY=your_polygonscan_api_key_here

# ===========================================
# MARKET DATA PROVIDERS
# ===========================================

# CoinGecko - Market data and token information
# Get your API key from: https://www.coingecko.com/en/api/pricing
# Free tier: 50 requests/minute, 10,000 requests/month
COINGECKO_API_KEY=your_coingecko_api_key_here

# CoinMarketCap - Alternative market data provider
# Get your API key from: https://pro.coinmarketcap.com/api
# Free tier: 333 requests/day
COINMARKETCAP_API_KEY=your_coinmarketcap_api_key_here

# ===========================================
# ADVANCED TRADING DATA
# ===========================================

# DexTools - Advanced DEX analytics and charts
# Get your API key from: https://www.dextools.io/api
# Free tier: 100 requests/minute
DEXTOOLS_API_KEY=your_dextools_api_key_here

# Moralis - Web3 development platform
# Get your API key from: https://moralis.io/
# Free tier: 40,000 requests/month
MORALIS_API_KEY=your_moralis_api_key_here

# ===========================================
# SOCIAL MEDIA ANALYSIS
# ===========================================

# Twitter API - Social sentiment analysis
# Get your bearer token from: https://developer.twitter.com/
# Free tier: 300 requests/15min window
TWITTER_BEARER_TOKEN=your_twitter_bearer_token_here

# Reddit API - Reddit mentions and sentiment
# Get your credentials from: https://www.reddit.com/prefs/apps
REDDIT_CLIENT_ID=your_reddit_client_id_here
REDDIT_CLIENT_SECRET=your_reddit_client_secret_here

# ===========================================
# DATABASE CONFIGURATION
# ===========================================

# Supabase - Database and authentication
# Get your keys from: https://supabase.com/dashboard
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_ANON_KEY=your_supabase_anon_key_here
SUPABASE_SERVICE_KEY=your_supabase_service_key_here

# Alternative: PostgreSQL database URL
# Format: postgresql://username:password@hostname:port/database
DATABASE_URL=postgresql://username:password@localhost:5432/meme_analyzer

# ===========================================
# PLATFORM SPECIFIC APIS
# ===========================================

# Pump.fun API (if available)
# Note: Pump.fun may not have official API, this is for future use
PUMP_FUN_API_KEY=your_pump_fun_api_key_here

# Jupiter API - Solana DEX aggregator
# Documentation: https://docs.jup.ag/
JUPITER_API_URL=https://price.jup.ag/v4

# Raydium API - Solana DEX
RAYDIUM_API_URL=https://api.raydium.io

# ===========================================
# EXTERNAL SERVICES
# ===========================================

# OpenAI API - For advanced text analysis (optional)
# Get your API key from: https://platform.openai.com/api-keys
# Used for: Social sentiment analysis, token description analysis
OPENAI_API_KEY=your_openai_api_key_here

# Telegram Bot Token - For notifications (optional)
# Get from @BotFather on Telegram
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here
TELEGRAM_CHAT_ID=your_telegram_chat_id_here

# ===========================================
# APPLICATION CONFIGURATION
# ===========================================

# Application Environment
# Values: development, production, staging
NODE_ENV=development
APP_ENV=development

# Application URL (for production deployments)
APP_URL=https://your-domain.com

# JWT Secret for user authentication (generate a random string)
JWT_SECRET=your_super_secret_jwt_key_here

# Session secret for user sessions
SESSION_SECRET=your_session_secret_here

# ===========================================
# RATE LIMITING CONFIGURATION
# ===========================================

# Redis URL for rate limiting (optional)
# Format: redis://username:password@hostname:port
REDIS_URL=redis://localhost:6379

# Rate limiting settings
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100

# ===========================================
# MONITORING AND ANALYTICS
# ===========================================

# Sentry for error tracking (optional)
# Get your DSN from: https://sentry.io/
SENTRY_DSN=your_sentry_dsn_here

# Google Analytics (optional)
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# ===========================================
# DEVELOPMENT SETTINGS
# ===========================================

# Enable debug logging
DEBUG=true

# Mock API responses (for development)
USE_MOCK_DATA=false

# API request timeout (milliseconds)
API_TIMEOUT=10000

# Maximum concurrent API requests
MAX_CONCURRENT_REQUESTS=10

# ===========================================
# SECURITY SETTINGS
# ===========================================

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8000,https://your-domain.com

# API key encryption salt (generate a random string)
ENCRYPTION_SALT=your_encryption_salt_here

# ===========================================
# FEATURE FLAGS
# ===========================================

# Enable experimental features
ENABLE_EXPERIMENTAL_FEATURES=false

# Enable AI-powered analysis
ENABLE_AI_ANALYSIS=true

# Enable real-time notifications
ENABLE_NOTIFICATIONS=false

# Enable user authentication
ENABLE_AUTH=false

# ===========================================
# PERFORMANCE SETTINGS
# ===========================================

# Cache TTL in seconds (3600 = 1 hour)
CACHE_TTL=3600

# Maximum cache size in MB
MAX_CACHE_SIZE=100

# Enable request caching
ENABLE_CACHING=true

# Database connection pool size
DB_POOL_SIZE=20

# ===========================================
# BACKUP CONFIGURATION
# ===========================================

# AWS S3 for backups (optional)
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
AWS_BUCKET_NAME=your_backup_bucket_name

# Backup frequency (cron format)
BACKUP_SCHEDULE=0 2 * * *

# ===========================================
# NOTES
# ===========================================

# 1. Never commit your actual .env file to version control
# 2. Different environments should have different .env files
# 3. Production values should be much more secure than development
# 4. Regularly rotate your API keys and secrets
# 5. Use your platform's secret management for production deployments
# 6. Test your configuration with npm run test:config (if implemented)

# ===========================================
# QUICK START CONFIGURATION
# ===========================================

# For a minimal setup, you only need these:
# - DEXSCREENER_API_KEY (for basic token data)
# - ETHERSCAN_API_KEY (for contract verification)
# - SUPABASE_URL and SUPABASE_ANON_KEY (for data persistence)

# Everything else is optional and can be added as needed.
